user  root;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        /var/run/nginx.pid;


events {
    use epoll;
    worker_connections  65535;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;
    gzip_static  on;

    #低于1kb的资源不压缩
    gzip_min_length 1k;

    #压缩级别【1-9】，越大压缩率越高，同时消耗cpu资源也越多，建议设置在4左右。
    gzip_comp_level 6;

    #需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片。
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml application/xml text/css application/font-woff application/vnd.ms-fontobject application/font-sfnt image/svg+xml;

    #配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
    gzip_disable "MSIE [1-6]\.";

    #设置用于处理请求压缩的缓冲区数量和大小。比如32 4K表示按照内存页（one memory page）大小以4K为单位（即一个系统中内存页为4K），申请32倍的内存空间。议此项不设置，使用默认值。
    #gzip_buffers 32 4k;

    #Header里增加"Vary: Accept-Encoding",指定代理服务器缓存压缩。
    gzip_vary on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        access_log  /var/log/nginx/access.log  main;

       
    location /dashboard-report/ {
            alias /usr/share/nginx/html/report/;
              try_files $uri $http_host$uri/ $http_host$uri/report/   @router2;
            index index.html;
        }
        location /dashboard/ {
            alias /usr/share/nginx/html/;
            try_files $uri $http_host$uri/ @router;
            index index.html;
        }

       
         location / {
            root /usr/share/nginx/html/;
            try_files $uri $http_host$uri/ @router;
            index index.html;
        }

       

        location = /index.html  {
            add_header Cache-Control “no-cache,no-store”;
            root /usr/share/nginx/html/;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            add_header Cache-Control “no-cache,no-store”;
            root   /usr/share/nginx/html/;
        }
        error_page 404 /404.html;
        location = /404.html {
            add_header Cache-Control “no-cache,no-store”;
            root   /usr/share/nginx/html/;
        }

        location @router {
            rewrite ^.*$ /index.html last;
        }
         location @router2 {
            rewrite ^.*$ /report/index.html last;
        }

        # location /ws {
        #     #rewrite ^/ws/(.*) /$1 break;   #两个反斜杆
        #     proxy_pass http://backend-dcim:9000;
        #     proxy_http_version 1.1;
        #     proxy_read_timeout 30s;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";

        # }

    }
}
